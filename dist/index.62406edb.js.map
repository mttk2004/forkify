{"mappings":"AAAA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,aAAa;IACjB,IAAI;QACF,oBAAoB;QACpB,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,QAAQ,GAAG,CAAC;QAEZ,IAAI,CAAC,IAAI,EAAE,EACT,MAAM,IAAI,MAAM,KAAK,OAAO;QAE9B,IAAI,EAAC,MAAM,EAAC,GAAG,KAAK,IAAI;QACxB,SAAS;YACP,aAAa,OAAO,YAAY;YAChC,IAAI,OAAO,EAAE;YACb,UAAU,OAAO,SAAS;YAC1B,aAAa,OAAO,WAAW;YAC/B,WAAW,OAAO,SAAS;YAC3B,UAAU,OAAO,QAAQ;YACzB,WAAW,OAAO,UAAU;YAC5B,OAAO,OAAO,KAAK;QACrB;QACA,QAAQ,GAAG,CAAC;QAEZ,sBAAsB;QACtB,MAAM,OAAO,CAAC;;kBAEA,EAAE,OAAO,QAAQ,CAAC,OAAO,EAAE,OAAO,KAAK,CAAC;;gBAE1C,EAAE,OAAO,KAAK,CAAC;;;;;;;;;qEASsC,EAAE,OAAO,WAAW,CAAC;;;;;;;oEAOtB,EAAE,OAAO,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgC5E,EAAE,OAAO,WAAW,CAAC,GAAG,CAAC,CAAA;YACvB,OAAO,CAAC;;;;;8CAK0B,EAAE,IAAI,QAAQ,CAAC;;6CAEhB,EAAE,IAAI,IAAI,CAAC;kBACtC,EAAE,IAAI,WAAW,CAAC;;;YAGxB,CAAC;QACH,GAAG,IAAI,CAAC,IAAI;;;;;;;;0CAQoB,EAAE,OAAO,SAAS,CAAC;;;;;gBAK7C,EAAE,OAAO,SAAS,CAAC;;;;;;;;;IAS/B,CAAC;QAED,gBAAgB,SAAS,GAAG;QAC5B,gBAAgB,kBAAkB,CAAC,cAAc;IACnD,EAAE,OAAO,KAAK;QACZ,MAAM;IACR;AACF;AAEA","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst showRecipe = async function() {\n  try {\n    // 1. Loading recipe\n    const res = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886');\n    const data = await res.json();\n    \n    console.log(data);\n    \n    if (!res.ok)\n      throw new Error(data.message)\n    \n    let {recipe} = data.data;\n    recipe = {\n      cookingTime: recipe.cooking_time,\n      id: recipe.id,\n      imageUrl: recipe.image_url,\n      ingredients: recipe.ingredients,\n      publisher: recipe.publisher,\n      servings: recipe.servings,\n      sourceUrl: recipe.source_url,\n      title: recipe.title\n    }\n    console.log(recipe);\n    \n    // 2. Rendering recipe\n    const html = `\n      <figure class=\"recipe__fig\">\n        <img src=\"${recipe.imageUrl}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients.map(ing => {\n            return `\n              <li class=\"recipe__ingredient\">\n                <svg class=\"recipe__icon\">\n                  <use href=\"src/img/icons.svg#icon-check\"></use>\n                </svg>\n                <div class=\"recipe__quantity\">${ing.quantity}</div>\n                <div class=\"recipe__description\">\n                  <span class=\"recipe__unit\">${ing.unit}</span>\n                  ${ing.description}\n                </div>\n              </li>\n            `\n          }).join('')}\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n    \n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', html)\n  } catch (err) {\n    alert(err)\n  }\n}\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}